#!/bin/bash

# Check if both arguments (size and directory) were provided
if [ -z "$1" ] || [ -z "$2" ]; then
  echo "Usage: $0 <size_in_GB> <directory>"
  echo "Example: $0 10 /path/to/directory"
  exit 1
fi

# Ensure the size is a valid integer
if ! [[ "$1" =~ ^[0-9]+$ ]]; then
  echo "Error: Size must be an integer representing gigabytes."
  exit 1
fi

SIZE="${1}G"  # Append 'G' to force gigabytes
DIRECTORY="$2"

# Store found files in an array, ensuring proper handling of spaces
mapfile -d '' FILES < <(find "$DIRECTORY" -type f -size +"$SIZE" -print0)

# Check if any files were found
if [ ${#FILES[@]} -eq 0 ]; then
  echo "No files larger than $SIZE found in $DIRECTORY."
  exit 0
fi

# Loop through each file
for FILE in "${FILES[@]}"; do
  FILE_SIZE=$(du -h -- "$FILE" | cut -f1)  # Get human-readable file size

  echo -e "\nFile: $FILE ($FILE_SIZE)"
  read -p "Do you want to delete this file? (y/n): " CONFIRMATION

  if [[ "$CONFIRMATION" == "y" || "$CONFIRMATION" == "Y" ]]; then
    rm -v -- "$FILE"
    echo "Deleted: $FILE"
  else
    echo "Skipped: $FILE"
  fi
done

